<?xml version="1.0"?>

<!-- Generated 08/27/2013 15:21:07

Configuration for 'payrollDB' database service

-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">


    <bean 
        id="payrollDB"
        class="com.payrolldb.PayrollDB"
        scope="singleton"
        lazy-init="true">
        <property name="dataServiceManager">
            <ref bean="payrollDBDataService"/>
        </property>
        <property name="taskManager">
            <ref bean="payrollDBTaskMgr"/>
        </property>
    </bean>


    <bean 
        class="com.wavemaker.runtime.data.spring.WMPropertyPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:payrollDB.properties</value>
            </list>
        </property>
    </bean>

    <bean 
        id="payrollDBDataSource"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource" 
        lazy-init="true">
        <property name="driverClassName" value="${payrollDB.driverClassName}"/>
        <property name="url" value="${payrollDB.connectionUrl}"/>
        <property name="username" value="${payrollDB.username}"/>
        <property name="password" value="${payrollDB.password}"/>
    </bean>


    <bean 
        id="payrollDBTxMgr" 
        class="org.springframework.orm.hibernate3.HibernateTransactionManager"
        lazy-init="true">
        <property name="sessionFactory">
            <ref bean="payrollDBSessionFactory"/>
        </property>
    </bean>


    <bean 
        id="payrollDBHibernateTemplate"
        class="org.springframework.orm.hibernate3.HibernateTemplate"
        lazy-init="true">
        <property name="sessionFactory"> 
            <ref bean="payrollDBSessionFactory"/>
        </property>
    </bean>  


    <bean 
        id="payrollDBSessionFactory" 
        class="com.wavemaker.runtime.data.spring.ConfigurationAndSessionFactoryBean"
        lazy-init="true">

        <!-- A unique name for this SessionFactory's configuration -->
        <property name="name" value="payrollDB"/>
        <property name="dataSource" ref="payrollDBDataSource"/>

        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${payrollDB.dialect}</prop>
                <prop key="hibernate.transaction.factory_class">
                    org.hibernate.transaction.JDBCTransactionFactory
                </prop>
                <prop key="hibernate.current_session_context_class">thread</prop>
                
            </props> 
        </property>

        <property name="mappingResources">
            <list>

<value>com/payrolldb/data/Userrole.hbm.xml</value>
<value>com/payrolldb/data/Additionalpayroll.hbm.xml</value>
<value>com/payrolldb/data/Payrollstatusdef.hbm.xml</value>
<value>com/payrolldb/data/Departmentdefinition.hbm.xml</value>
<value>com/payrolldb/data/Systemparameter.hbm.xml</value>
<value>com/payrolldb/data/Roledefinition.hbm.xml</value>
<value>com/payrolldb/data/Monthlypayroll.hbm.xml</value>
<value>com/payrolldb/data/Employeeinfo.hbm.xml</value>
<value>com/payrolldb/data/User.hbm.xml</value>
<value>com/payrolldb/data/Monthlyincome.hbm.xml</value>
<value>com/payrolldb/data/Salarycodedef.hbm.xml</value>

<value>com/payrolldb/data/Payrollstatusdef.ql.xml</value>
<value>com/payrolldb/data/app-queries.ql.xml</value>

            </list>
        </property>

    </bean>


    <!-- the data service bean instance is injected into the service bean -->
    <bean 
        id="payrollDBDataService" 
        class="com.wavemaker.runtime.data.spring.SpringDataServiceManager"
        lazy-init="true">
        <constructor-arg>
            <!-- the value of the "name" property of the SessionFactory -->
            <value>payrollDB</value>
        </constructor-arg>
        <constructor-arg>
            <ref bean="payrollDBHibernateTemplate"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="payrollDBTxMgr"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="payrollDBTaskMgr"/>
        </constructor-arg>
        <constructor-arg>
            <map>
                <entry key="useIndividualCRUDOperations" value="false"/>
                <entry key="refreshEntities" value=""/> 
            </map>
        </constructor-arg>
    </bean>


    <bean 
        id="payrollDBTaskMgr"
        class="com.wavemaker.runtime.data.DefaultTaskManager"
        lazy-init="true"/>

    <bean class="com.wavemaker.runtime.service.events.EventWire"
        lazy-init="false">
        <property name="serviceWire" ref="payrollDBServiceWire"/>
        <property name="eventListener">
            <bean class="com.wavemaker.runtime.data.DataServiceEventListener"/>
        </property>
    </bean>

    <bean id="payrollDBServiceWire"
        class="com.wavemaker.runtime.service.reflect.ReflectServiceWire"
        lazy-init="false" scope="singleton">
        <property name="serviceId" value="payrollDB"/>
        <property name="serviceType" ref="DataService"/>
    </bean>

</beans>
